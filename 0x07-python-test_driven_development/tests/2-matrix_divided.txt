=========================
How to use matrix_divided
=========================

this module defines that division all elements of a matrix

=============

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3],[4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> print(matrix_divided([[5, "1"], [3, 4]], 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> print(matrix_divided([[2, 4, 5], [3, 2]], 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided(2))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided())
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(matrix_divided([[1, 2, 4], [1, 3], float('inf')]))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
